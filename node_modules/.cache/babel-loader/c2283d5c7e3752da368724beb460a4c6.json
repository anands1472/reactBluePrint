{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\officeRepo\\\\reactBluePrint\\\\src\\\\components\\\\Main\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"../Table\";\nimport Dropdown from \"../Dropdown\";\nimport Search from \"../Search\";\nimport { STATES } from \"./constants/states\";\nimport { GENRES } from \"./constants/genres\";\nimport { connect } from \"react-redux\";\n\nconst Main = ({\n  reduxUsaData,\n  usaDataInfo,\n  usaData\n}) => {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [displayRestaurants, setDisplayRestaurants] = useState([]);\n  const [activeState, setActiveState] = useState(\"\");\n  const [activeGenre, setActiveGenre] = useState(\"\");\n  const [activeQuery, setActiveQuery] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getRestaurants = async () => {\n    setIsLoading(true); // const response = await fetch(\n    //   \"https://code-challenge.spectrumtoolbox.com/api/restaurants\",\n    //   {\n    //     headers: {\n    //       Authorization: \"Api-Key q3MNxtfep8Gt\",\n    //     },\n    //   }\n    // );\n\n    await reduxUsaData();\n    setIsLoading(false);\n  };\n\n  console.log(\"usaData==============\", usaData);\n  useEffect(() => {\n    getRestaurants();\n  }, []); // useEffect(() => {\n  //   const data =  usaDataInfo;\n  //   setIsLoading(false);\n  //   const alphabetizedData = data.sort((a, b) => (a.name > b.name ? 1 : -1));\n  //   setRestaurants(alphabetizedData);\n  //   setDisplayRestaurants(alphabetizedData);\n  // }, [usaDataInfo]);\n\n  const handleSelect = e => {\n    const targetValue = e.target.value;\n    const category = e.target.name.toLowerCase();\n\n    if (category === \"state\") {\n      setActiveState(targetValue);\n    } else if (category === \"genre\") {\n      setActiveGenre(targetValue);\n    }\n  };\n\n  const formHandler = value => {\n    let normalizedValue = value.toLowerCase();\n    setActiveQuery(normalizedValue);\n  };\n\n  const clearSearch = () => {\n    setActiveState(\"\");\n    setActiveGenre(\"\");\n    setActiveQuery(\"\");\n  };\n\n  const filterState = restaurant => {\n    if (activeState) {\n      return restaurant.state === activeState;\n    } else {\n      return restaurant;\n    }\n  };\n\n  const filterGenre = restaurant => {\n    if (activeGenre) {\n      return restaurant.genre.toLowerCase().includes(activeGenre);\n    } else {\n      return restaurant;\n    }\n  };\n\n  const filterSearch = restaurant => {\n    if (activeQuery) {\n      let normalizedName = restaurant.name.toLowerCase();\n      let normalizedCity = restaurant.city.toLowerCase();\n      let normalizedGenre = restaurant.genre.toLowerCase();\n\n      if (normalizedName.includes(activeQuery) || normalizedCity.includes(activeQuery) || normalizedGenre.includes(activeQuery)) {\n        return restaurant;\n      }\n    } else {\n      return restaurant;\n    }\n  };\n\n  useEffect(() => {\n    let result = restaurants.filter(filterState);\n    result = result.filter(filterGenre);\n    result = result.filter(filterSearch);\n    setDisplayRestaurants(result);\n  }, [activeState, activeGenre, activeQuery]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      formHandler: formHandler,\n      clearSearch: clearSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      name: \"State\",\n      opts: STATES,\n      selectHandler: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      name: \"Genre\",\n      opts: GENRES,\n      selectHandler: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      props: displayRestaurants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoading ? \"LOADING....\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"XKBxc0YAJZP6rKEOPl2ygIH1yZ4=\");\n\n_c = Main;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    home: state.home,\n    usaData: state.usaData\n  };\n};\n\nexport default connect(mapStateToProps)(Main); // export default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["D:/officeRepo/reactBluePrint/src/components/Main/index.js"],"names":["React","useState","useEffect","Table","Dropdown","Search","STATES","GENRES","connect","Main","reduxUsaData","usaDataInfo","usaData","restaurants","setRestaurants","displayRestaurants","setDisplayRestaurants","activeState","setActiveState","activeGenre","setActiveGenre","activeQuery","setActiveQuery","isLoading","setIsLoading","getRestaurants","console","log","handleSelect","e","targetValue","target","value","category","name","toLowerCase","formHandler","normalizedValue","clearSearch","filterState","restaurant","state","filterGenre","genre","includes","filterSearch","normalizedName","normalizedCity","city","normalizedGenre","result","filter","mapStateToProps","posts","home"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Table from \"../Table\";\r\nimport Dropdown from \"../Dropdown\";\r\nimport Search from \"../Search\";\r\nimport { STATES } from \"./constants/states\";\r\nimport { GENRES } from \"./constants/genres\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Main = ({ reduxUsaData, usaDataInfo, usaData }) => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [displayRestaurants, setDisplayRestaurants] = useState([]);\r\n  const [activeState, setActiveState] = useState(\"\");\r\n  const [activeGenre, setActiveGenre] = useState(\"\");\r\n  const [activeQuery, setActiveQuery] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const getRestaurants = async () => {\r\n    setIsLoading(true);\r\n    // const response = await fetch(\r\n    //   \"https://code-challenge.spectrumtoolbox.com/api/restaurants\",\r\n    //   {\r\n    //     headers: {\r\n    //       Authorization: \"Api-Key q3MNxtfep8Gt\",\r\n    //     },\r\n    //   }\r\n    // );\r\n\r\n    await reduxUsaData();\r\n    setIsLoading(false);\r\n  };\r\n  console.log(\"usaData==============\", usaData);\r\n\r\n  useEffect(() => {\r\n    getRestaurants();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const data =  usaDataInfo;\r\n  //   setIsLoading(false);\r\n  //   const alphabetizedData = data.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n  //   setRestaurants(alphabetizedData);\r\n  //   setDisplayRestaurants(alphabetizedData);\r\n  // }, [usaDataInfo]);\r\n\r\n  const handleSelect = (e) => {\r\n    const targetValue = e.target.value;\r\n    const category = e.target.name.toLowerCase();\r\n    if (category === \"state\") {\r\n      setActiveState(targetValue);\r\n    } else if (category === \"genre\") {\r\n      setActiveGenre(targetValue);\r\n    }\r\n  };\r\n\r\n  const formHandler = (value) => {\r\n    let normalizedValue = value.toLowerCase();\r\n    setActiveQuery(normalizedValue);\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setActiveState(\"\");\r\n    setActiveGenre(\"\");\r\n    setActiveQuery(\"\");\r\n  };\r\n\r\n  const filterState = (restaurant) => {\r\n    if (activeState) {\r\n      return restaurant.state === activeState;\r\n    } else {\r\n      return restaurant;\r\n    }\r\n  };\r\n\r\n  const filterGenre = (restaurant) => {\r\n    if (activeGenre) {\r\n      return restaurant.genre.toLowerCase().includes(activeGenre);\r\n    } else {\r\n      return restaurant;\r\n    }\r\n  };\r\n\r\n  const filterSearch = (restaurant) => {\r\n    if (activeQuery) {\r\n      let normalizedName = restaurant.name.toLowerCase();\r\n      let normalizedCity = restaurant.city.toLowerCase();\r\n      let normalizedGenre = restaurant.genre.toLowerCase();\r\n      if (\r\n        normalizedName.includes(activeQuery) ||\r\n        normalizedCity.includes(activeQuery) ||\r\n        normalizedGenre.includes(activeQuery)\r\n      ) {\r\n        return restaurant;\r\n      }\r\n    } else {\r\n      return restaurant;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let result = restaurants.filter(filterState);\r\n    result = result.filter(filterGenre);\r\n    result = result.filter(filterSearch);\r\n    setDisplayRestaurants(result);\r\n  }, [activeState, activeGenre, activeQuery]);\r\n\r\n  return (\r\n    <>\r\n      <Search formHandler={formHandler} clearSearch={clearSearch} />\r\n      <Dropdown name={\"State\"} opts={STATES} selectHandler={handleSelect} />\r\n      <Dropdown name={\"Genre\"} opts={GENRES} selectHandler={handleSelect} />\r\n      <Table props={displayRestaurants} />\r\n      <h2>{isLoading ? \"LOADING....\" : \"\"}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts,\r\n    home: state.home,\r\n    usaData: state.usaData,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Main);\r\n// export default Main;\r\n"]},"metadata":{},"sourceType":"module"}