{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\officeRepo\\\\reactBluePrint\\\\src\\\\components\\\\Table\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Pagination from '../Pagination';\nimport '../../styles.css';\n\nconst Table = ({\n  props\n}) => {\n  _s();\n\n  const restaurants = props;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [entriesPerPage] = useState(10); // Gets current page array\n\n  const indexOfLastPage = currentPage * entriesPerPage;\n  const indexOfFirstPage = indexOfLastPage - entriesPerPage;\n  const currentEntries = restaurants.slice(indexOfFirstPage, indexOfLastPage); // Changes page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (!restaurants.length > 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Restaurant Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Restaurant Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"title-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), currentEntries.map(restaurant => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: restaurant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [restaurant.city, \", \", restaurant.state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: restaurant.telephone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: restaurant.genre.split(',').join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)]\n            }, restaurant.telephone, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        entriesPerPage: entriesPerPage,\n        totalEntries: restaurants.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(Table, \"6z0tX6Sf8T9ZvHY/JuuS+t64U4s=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["D:/officeRepo/reactBluePrint/src/components/Table/index.js"],"names":["React","useState","Pagination","Table","props","restaurants","currentPage","setCurrentPage","entriesPerPage","indexOfLastPage","indexOfFirstPage","currentEntries","slice","paginate","pageNumber","length","map","restaurant","name","city","state","telephone","genre","split","join"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,kBAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC3B,QAAMC,WAAW,GAAGD,KAApB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACO,cAAD,IAAmBP,QAAQ,CAAC,EAAD,CAAjC,CAH2B,CAK3B;;AACA,QAAMQ,eAAe,GAAGH,WAAW,GAAGE,cAAtC;AACA,QAAME,gBAAgB,GAAGD,eAAe,GAAGD,cAA3C;AACA,QAAMG,cAAc,GAAGN,WAAW,CAACO,KAAZ,CAAkBF,gBAAlB,EAAoCD,eAApC,CAAvB,CAR2B,CAU3B;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIP,cAAc,CAACO,UAAD,CAA7C;;AAEA,MAAI,CAACT,WAAW,CAACU,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD,GAPD,MAOO;AACL,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGJ,cAAc,CAACK,GAAf,CAAmBC,UAAU,IAAI;AAChC,gCACE;AAAA,sCACE;AAAA,0BAAKA,UAAU,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,2BACGD,UAAU,CAACE,IADd,QACsBF,UAAU,CAACG,KADjC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AAAA,0BAAKH,UAAU,CAACI;AAAhB;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA,0BAAKJ,UAAU,CAACK,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4BC,IAA5B,CAAiC,IAAjC;AAAL;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA,eAASP,UAAU,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA,oBADF;AAUD,WAXA,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAwBE,QAAC,UAAD;AACE,QAAA,cAAc,EAAEb,cADlB;AAEE,QAAA,YAAY,EAAEH,WAAW,CAACU,MAF5B;AAGE,QAAA,QAAQ,EAAEF;AAHZ;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA,oBADF;AAgCD;AACF,CAtDD;;GAAMV,K;;KAAAA,K;AAwDN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Pagination from '../Pagination';\r\nimport '../../styles.css';\r\n\r\nconst Table = ({ props }) => {\r\n  const restaurants = props;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [entriesPerPage] = useState(10);\r\n\r\n  // Gets current page array\r\n  const indexOfLastPage = currentPage * entriesPerPage;\r\n  const indexOfFirstPage = indexOfLastPage - entriesPerPage;\r\n  const currentEntries = restaurants.slice(indexOfFirstPage, indexOfLastPage);\r\n\r\n  // Changes page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  if (!restaurants.length > 0) {\r\n    return (\r\n      <>\r\n        <h2>Restaurant Results:</h2>\r\n        <h2>No results found.</h2>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h2>Restaurant Results:</h2>\r\n        <table>\r\n          <tbody>\r\n            <tr className=\"title-row\">\r\n              <td>Name</td>\r\n              <td>City</td>\r\n              <td>Phone</td>\r\n              <td>Genres</td>\r\n            </tr>\r\n            {currentEntries.map(restaurant => {\r\n              return (\r\n                <tr key={restaurant.telephone}>\r\n                  <td>{restaurant.name}</td>\r\n                  <td>\r\n                    {restaurant.city}, {restaurant.state}\r\n                  </td>\r\n                  <td>{restaurant.telephone}</td>\r\n                  <td>{restaurant.genre.split(',').join(', ')}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          entriesPerPage={entriesPerPage}\r\n          totalEntries={restaurants.length}\r\n          paginate={paginate}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}